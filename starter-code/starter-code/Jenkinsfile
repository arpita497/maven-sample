properties([
    parameters([
        choiceParam(name: 'deploymentEnv', choices: ['UAT', 'STG', 'PRD'], description: 'Please Select the Deployment Env'),
    ])   
])

node ('linuxSlave') {
    
    def DEPLOYMENT_SERVER = '3.110.56.221'
    def DEPLOYMENT_USER = 'ubuntu'
    
    def ENVS = ['UAT' : ['isProductionLike' : false, 'deploymentServer' : '3.110.56.221', 'deploymentUser' : 'ubuntu'],
                'STG' : ['isProductionLike' : false, 'deploymentServer' : '', 'deploymentUser' : ''],
                'PRD' : ['isProductionLike' : true, 'deploymentServer' : '', 'deploymentUser' : '']]
    
    stage ('git checkout step') {
        git branch: 'feature/integrate-sonar', credentialsId: '05447940-1535-4b50-8bb2-c1dfb09bb6d7', url: 'https://github.com/arpita497/maven-sample.git'
    }
    
    
    stage ('maven build step') {
        tool name: 'maven', type: 'maven'
            withCredentials([string(credentialsId: 'SONAR_TOKEN', variable: 'SONAR_TOKEN')]) {
          sh  '''
          
                cd /home/ubuntu/jenkins/workspace/integrate-sonar/starter-code/starter-code/
                mvn clean package sonar:sonar \
                -Dsonar.login=d0776aca172e12bf0e42279108615babdfe2c0e0 \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.organization=arpita497 \
                -Dsonar.projectKey=maven-sample-project
            '''
            }
    }
    
    stage ('maven JFrog integration') {
        tool name: 'maven', type: 'maven'
            withCredentials([string(credentialsId: '083a6b4c-3e4f-479c-910a-eba44faee6f7', variable: 'Jfrog-token')]) {
          sh  '''
          cd ./starter-code/starter-code/
            mvn --version
            mvn clean deploy -s ./settings.xml -Drepo.username=arpita.patnaik497@gmail.com -Drepo.password="${Jfrog-token}"
                
            '''
            }
    }
  
    stage ('Ansible installation and application deployment') {
/*    tool name: 'maven', type: 'maven'
    sh '''
    cd /var/lib/jenkins/workspace/integrate-sonar/starter-code/starter-code/
    mvn clean package
    '''*/
    ansiblePlaybook credentialsId: 'Privatekey', installation: 'Ansible', inventory: 'starter-code/starter-code/hosts', playbook: 'starter-code/starter-code/playbook-tomcat.yml'
    }

  /* 
   stage ('deploy '){
       sh '''
            cp /home/ubuntu/jenkins/workspace/integrate-sonar/starter-code/starter-code/target/demo-4.0.0-SNAPSHOT.war  /opt/tomcat/webapps/
            sudo sh /opt/tomcat/bin/startup.sh
        '''
   }
   */
   
}
